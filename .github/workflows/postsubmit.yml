name: Post-submit Checks

on:
  push:
    branches: ["main"]
  pull_request:
  merge_group:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

# Cancel in-progress runs for the same branch or PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: -Dwarnings

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: "clippy"

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Check formatting
        run: cargo fmt --check

      - name: Run clippy linter
        run: cargo clippy --no-deps

      - name: Check for unused dependencies
        uses: bnjbvr/cargo-machete@main

  test:
    runs-on: ubuntu-22.04

    env:
      RUSTFLAGS: -Dwarnings -Cinstrument-coverage
      # Path for coverage files generated by the test run
      LLVM_PROFILE_FILE: ${{ github.workspace }}/target/oct-%p-%3m.profraw
      CARGO_LLVM_COV: 1
      CARGO_LLVM_COV_SHOW_ENV: 1
      CARGO_LLVM_COV_TARGET_DIR: ${{ github.workspace }}/target

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: "llvm-tools-preview"

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref_name == 'main' }}

      - name: Prepare coverage
        run: cargo llvm-cov clean --workspace

      - name: Compile for tests
        run: cargo test --no-run --locked

      # Binaries needs to be compiled separately because
      # CLI tests call these binaries.
      - name: Compile debug binaries for tests
        run: cargo build --bin oct-cli

      - name: Run tests and generate coverage data
        run: cargo test --no-fail-fast --verbose

      - name: Report coverage
        run: cargo llvm-cov report --lcov --output-path ./coverage.lcov

      - name: Upload coverage report
        if: ${{ github.event_name != 'merge_group' }}
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.lcov
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: opencloudtool/opencloudtool

